public class MultiplicationTableThread extends Thread {
    private int number;

    public MultiplicationTableThread(int number) {
        this.number = number;
    }

    @Override
    public void run() {
        try {
            System.out.println("Thread " + number + " is in RUNNING state.");
            for (int i = 1; i <= 10; i++) {
                System.out.println(number + " * " + i + " = " + (number * i));
                Thread.sleep(500); // Introducing delay for demonstration
            }
        } catch (InterruptedException e) {
            System.out.println("Thread " + number + " is interrupted.");
        }
        System.out.println("Thread " + number + " is exiting.");
    }

    public static void main(String[] args) {
        MultiplicationTableThread table5Thread = new MultiplicationTableThread(5);
        MultiplicationTableThread table10Thread = new MultiplicationTableThread(10);

        System.out.println("Main thread is starting the threads.");

        table5Thread.start();
        table10Thread.start();

        try {
            System.out.println("Main thread is waiting for threads to finish.");
            table5Thread.join();
            table10Thread.join();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        System.out.println("Main thread is done.");
    }
}
